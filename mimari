trading_bot/
│
├── main.py                           # 🚀 Ana başlatma
├── config.yaml                       # Konfigürasyon
├── requirements.txt
├── .gitignore
│
├── core/                             # 📊 PARÇA 1-2 (Price Action)
│   ├── __init__.py
│   │
│   # PARÇA 1: Trend & Zone Detection
│   ├── trend_detector.py            # EMA20/50, sideways
│   ├── zone_detector.py             # ZigZag++ & Swing HL
│   ├── zone_quality_scorer.py       # 0-10 scoring
│   │
│   # PARÇA 2: Entry & Exit System
│   ├── choch_detector.py            # Change of Character
│   ├── fibonacci_calculator.py      # 0.705, 0.618 levels
│   ├── entry_system.py              # Entry timing
│   └── exit_system.py               # TP/SL/Trailing/Breakeven
│
├── adaptive/                         # 🔄 PARÇA 3 (Re-entry & Adaptive)
│   ├── __init__.py
│   ├── reentry_manager.py           # Re-entry logic
│   ├── adaptive_parameters.py       # ATR-based adaptation
│   ├── liquidity_detector.py        # Wick sweep detection
│   └── zone_memory.py               # Zone performance tracking
│
├── rl/                               # 🤖 PARÇA 4-7 (RL + Behavior)
│   ├── __init__.py
│   │
│   # PARÇA 4: RL Architecture
│   ├── rl_agent.py                  # PPO agent
│   ├── state_builder.py             # 40 features
│   ├── setup_scorer.py              # 0-100 scoring
│   ├── gate_system.py               # 4-gate validation
│   │
│   # PARÇA 5: Risk & Correlation (RMM içinde)
│   # (Already exists in Pozisyon-Agent)
│   │
│   # PARÇA 6: Reward & Anti-FOMO
│   ├── reward_engine.py             # -200 to +200
│   ├── anti_fomo.py                 # FOMO detection & block
│   │
│   # PARÇA 7: Anti-Revenge & Overtrading
│   ├── anti_revenge.py              # Cooldown system
│   ├── overtrading_detector.py      # Frequency limits
│   └── emotional_state.py           # Confidence/Stress/Patience
│
├── learning/                         # 📚 PARÇA 8 (Learning & Integration)
│   ├── __init__.py
│   ├── experience_buffer.py         # 100K experience storage
│   ├── continuous_learning.py       # Training loop
│   ├── performance_tracker.py       # Metrics tracking
│   ├── adaptive_threshold.py        # Threshold optimization
│   └── system_integration.py        # Full system orchestrator
│
├── infrastructure/                   # 🛡️ PARÇA 9 (Resilience)
│   ├── __init__.py                  # InfrastructureManager
│   ├── state_manager.py
│   ├── safe_mode_manager.py
│   ├── circuit_breaker.py
│   ├── telegram_bot.py
│   ├── database_layer.py
│   ├── cli_dashboard.py
│   ├── indicator_learning_manager.py
│   ├── backup_manager.py
│   └── volatility_guard.py
│
└── agents/                           # 🎯 3-Agent Orchestrators
    ├── __init__.py
    ├── coin_selection_agent.py      # Agent 1
    ├── trading_agent.py             # Agent 2 (uses Parça 1-4)
    └── risk_agent.py                # Agent 3 (uses RMM from Pozisyon-Agent)
